#!/usr/bin/python

class MNG_Game_Play(object):

    def __init__(self):
        from Utility.MNG_JSON       import MNG_JSON
        from Init_Game              import Init_Game
        from Utility.Print_Control  import Print_Control

        self.__json_obj             = MNG_JSON()
        self.__init_game_obj        = Init_Game()
        self.__print_control_obj    = Print_Control()

    def exe_game(self):
        try:
            v_game_dict = self.__json_obj.get_dict('game')
        except IOError:
            self.start_new_game()
        else:
            if  v_game_dict['game_status']=='Over':
                self.start_new_game()
            else:
                v_input_str = "A game exists.  Would you like to continue? (Y/N) "
                v_continue_game = self.__print_control_obj.exe_print_msg_for_response(v_input_str)
                v_continue_game = v_continue_game.upper()

                if      v_continue_game == 'N':
                    v_msg = "Lets start a new game!"
                    self.__print_control_obj.exe_print_msg(v_msg)
                    self.start_new_game()
                elif    v_continue_game == 'Y':
                    v_msg = "Last Game Loaded"
                    self.__print_control_obj.exe_print_msg(v_msg)
                    v_game_dict = self.__json_obj.get_dict('game')
                else:
                    v_msg = "Please enter a 'Y' to load previous game or a'N' to start a new game"
                    self.__print_control_obj.exe_print_msg(v_msg)
                    self.exe_game()

    def start_new_game(self):
        self.__init_game_obj.init_game()
        v_game_dict = self.__json_obj.get_dict('game')
        self.show_game_status()

    def show_game_status(self):
        v_game_dict = self.__json_obj.get_dict('game')

        v_game_status   = v_game_dict['game_status']
        if v_game_status != 'over':
            v_player_up_nm_key = "player_%s_nm" %(v_game_dict['player_up'])
            v_player_up_nm  = v_game_dict[v_player_up_nm_key]
            v_msg = "%s is up" %(v_player_up_nm)
            self.__print_control_obj.exe_print_msg(v_msg)
            v_inning_no = v_game_dict['inning_no']
            v_msg = "It is inning number %s" %(v_inning_no)
            self.__print_control_obj.exe_print_msg(v_msg)
            v_balls_on_table = self.chk_ball_count()
            v_game_dict['balls_on_table'] = v_balls_on_table
            v_player_up_balls_made_key = "player%s_balls_made" %(v_game_dict['player_up'])
            v_player_up_balls_made  = v_game_dict[v_player_up_balls_made_key]
            v_player_up_foul_key    = "player%s_fouls" %(v_game_dict['player_up'])
            v_player_up_foul        = v_game_dict[v_player_up_foul_key]
            v_player_up_score       = v_player_up_balls_made - v_player_up_foul
            v_score_fouls_true_flg  = v_game_dict['score_fouls_true']
            if v_score_fouls_true_flg == "Y":
                v_msg = "Player %s has made %s balls with %s fouls and has a total score of %s" %(v_player_up_nm,v_player_up_balls_made,v_player_up_foul,v_player_up_score)
            else:
                v_msg = "Player %s has made %s balls and has a total score of %s" %(v_player_up_nm,v_player_up_balls_made,v_player_up_score)
            self.__print_control_obj.exe_print_msg(v_msg)
        else:
            v_msg = "Game is Over"
            self.__print_control_obj.exe_print_msg(v_msg)

    def chk_ball_count(self):
        v_chk_ball_count = "X"
        v_game_dict = self.__json_obj.get_dict('game')
        v_balls_on_table = v_game_dict['balls_on_table']
        v_msg = "There should be %s balls on the table" %(v_balls_on_table)
        self.__print_control_obj.exe_print_msg(v_msg)
        v_input_str = "Is this correct? "
        v_pre_chk_ball_count = self.__print_control_obj.exe_print_msg_for_response(v_input_str)
        v_pre_chk_ball_count = v_pre_chk_ball_count.upper()

        while v_chk_ball_count == "X":
            if      v_pre_chk_ball_count == "Y":
                v_chk_ball_count = v_pre_chk_ball_count
            elif    v_pre_chk_ball_count == "N":
                v_chk_ball_count = v_pre_chk_ball_count
            else:
                v_msg = "Please enter a Y or N to indicate if we are keeping track of fouls."
                self.__print_control_obj.exe_print_msg(v_msg)
                v_msg = "There should be %s balls on the table" %(v_balls_on_table)
                self.__print_control_obj.exe_print_msg(v_msg)
                v_input_str = "Is this correct? "
                v_pre_chk_ball_count = self.__print_control_obj.exe_print_msg_for_response(v_input_str)
                v_pre_chk_ball_count = v_pre_chk_ball_count.upper()

        return v_balls_on_table

